# /api/skillsets/analyzer.py
# VERSI칍N FINAL para g4f actualizado en Vercel, con proveedor autom치tico.

import g4f
import asyncio

# --- Configuraci칩n de g4f ---
# No es necesario tocar esto.
g4f.debug.logging = False
g4f.debug.check_version = False

class Analyzer:
    """
    Un Skillset que analiza c칩digo usando la versi칩n m치s reciente de g4f.
    """
    
    async def ejecutar(self, datos_peticion):
        """
        El m칠todo principal que el motor A.L.E. llamar치.
        """
        print("-> Iniciando di치logo con el Skillset 'Analyzer' (Motor: g4f actualizado)...")
        
        codigo_a_analizar = datos_peticion.get("codigo")
        if not codigo_a_analizar:
            return {"error": "Petici칩n inv치lida: Debes incluir el campo 'codigo'."}

        # --- PROMPT DEL SISTEMA ---
        prompt_sistema = """
        Eres un programador senior experto, actuando como un colaborador y mentor. Tu tono es constructivo y respetuoso. Tu misi칩n es analizar el c칩digo y devolver un informe estructurado.
        Responde 칔NICA Y EXCLUSIVAMENTE con la siguiente estructura:
        [LENGUAJE IDENTIFICADO]: ...
        [QU칄 ES]: ...
        [PARA QU칄 SIRVE]: ...
        [AN츼LISIS DE ERRORES Y MEJORAS]: ...
        [SOLUCIONES PROPUESTAS]: ...
        [POSIBLES EXTENSIONES]: ...
        """

        try:
            print("   Enviando c칩digo a g4f (proveedor autom치tico) para an치lisis...")
            
            # --- LLAMADA A G4F ADAPTADA ---
            # Esta sintaxis es para las versiones m치s nuevas de g4f.
            # No especificamos 'provider' para dejar que la librer칤a elija el mejor.
            respuesta_ia = await g4f.ChatCompletion.create_async(
                model=g4f.models.gpt_4,
                messages=[
                    {"role": "system", "content": prompt_sistema},
                    {"role": "user", "content": codigo_a_analizar}
                ]
            )
            
            print("   An치lisis recibido de g4f.")
            return {"analisis": respuesta_ia}

        except Exception as e:
            error_msg = f"Hubo un problema con el motor g4f actualizado. Detalles: {str(e)}"
            print(f"   游뚿 {error_msg}")
            import traceback
            traceback.print_exc()
            return {"error": error_msg}
